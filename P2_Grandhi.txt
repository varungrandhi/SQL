CREATE TABLE AUTHORS
(ANAME VARCHAR(22) ,
    ANO VARCHAR(8) NOT NULL ,CONSTRAINT AUTHORS_PK PRIMARY KEY (ANO)
 )

CREATE TABLE BOOKS
(
    BTITLE VARCHAR(28) ,BID VARCHAR(6) NOT NULL ,
    CONSTRAINT BOOKS_PK PRIMARY KEY (BID) 
)


CREATE TABLE EARNING
(
    ANO VARCHAR(8) NOT NULL REFERENCES AUTHORS (ANO),BID VARCHAR(6) NOT NULL REFERENCES BOOKS (BID),
    PAYMENT INTEGER,CONSTRAINT EARNING_PK PRIMARY KEY (ANO, BID)
    
)

INSERT STATEMENTS


INSERT INTO AUTHORS (ANAME,ANO) VALUES ('L Grassy','A1');
INSERT INTO AUTHORS (ANAME,ANO) VALUES ('D Flower','A2');
INSERT INTO AUTHORS (ANAME,ANO) VALUES ('M Trunk','A3');
INSERT INTO AUTHORS (ANAME,ANO) VALUES ('K Rooty','A4');
INSERT INTO AUTHORS (ANAME,ANO) VALUES ('T Branch','A5');
INSERT INTO AUTHORS (ANAME,ANO) VALUES ('L Leafy','A6');
INSERT INTO AUTHORS (ANAME,ANO) VALUES ('X Bark','A7');

INSERT INTO BOOKS (BTITLE,BID) VALUES ('Long walk','B1');
INSERT INTO BOOKS (BTITLE,BID) VALUES ('Longest day','B2');
INSERT INTO BOOKS (BTITLE,BID) VALUES ('Love the fun','B3');
INSERT INTO BOOKS (BTITLE,BID) VALUES ('Laugh and cry','B4');
INSERT INTO BOOKS (BTITLE,BID) VALUES ('Laugh all the way','B5');

INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A1', 'B1', 78);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A1', 'B2', 80);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A2', 'B2', 83);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A2', 'B3', 88);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A2', 'B4', 86);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A3', 'B2', 74);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A3', 'B3', 89);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A4', 'B2', 75);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A4', 'B3', 85);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A4', 'B4', 55);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A5', 'B1', 58);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A5', 'B3', 56);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A5', 'B4', 55);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A6', 'B2', 77);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A6', 'B3', 88);
INSERT INTO EARNING (ANO,BID,PAYMENT) VALUES ('A6', 'B4', 54);

ANSWERS 
1. Find the names of authors who did not co-author any book that has ‘T Branch' as a co-author.

SELECT A.ANAME AS AUTHOR from AUTHORS A WHERE NOT EXISTS(SELECT * FROM EARNING E WHERE BID  IN  (SELECT B.BID FROM AUTHORS A
  INNER JOIN EARNING B ON A.ANO = B.ANO where A.ANAME = 'T Branch') and A.ANO= E.ANO)

OUTPUT:
AUTHOR
X Bark


2. Find the names of books having ‘KRooty’ as co-author but not having `L Leafy’ as co-author.

SELECT BTITLE AS BOOKS from( SELECT EARNING.BID from EARNING, AUTHORS  where EARNING.ANO = AUTHORS.ANO AND AUTHORS.ANO='A4'
MINUS 
SELECT EARNING.BID from EARNING, AUTHORS WHERE EARNING.ANO = AUTHORS.ANO AND AUTHORS.ANO ='A5') x
,BOOKS WHERE  x.BID=BOOKS.BID;

BOOKS
Longest day

3. 

SELECT F.ANAME As AUTHORS FROM (SELECT E.ANO  FROM EARNING e WHERE BID  in  ( SELECT  B.BID FROM
   AUTHORS A INNER JOIN EARNING B on  A.ANO = B.ANO   WHERE A.ANAME = 'T BRANCH') And e.ANO not in (SELECT ANO FROM AUTHORS WHERE ANAME='T BRANCH')
  GROUP BY e.ANO     HAVING COUNT(distinct BID)=(SELECT COUNT(BID) FROM  AUTHORS A INNER JOIN EARNING B on A.ANO = B.ANO   WHERE A.ANAME = 'T BRANCH'))x INNER JOIN AUTHORS f on x.ANO=f.ANO

AUTHORS

4.
SELECT DISTINCT N_A.ANAME as AUTHORNAME   FROM EARNING E_N INNER JOIN AUTHORS N_A ON N_A.ANO = E_N.ANO INNER JOIN (
 SELECT BID, PAYMENT FROM  EARNING E_N INNER JOIN AUTHORS N_A ON N_A.ANO = E_N.ANO WHERE N_A.ANAME = 'T Branch' ) ANS ON 
      E_N.PAYMENT > ANS.PAYMENT  AND ANS.BID = E_N.BID
ANSWER:
AUTHORNAME
D Flower
L Grassy
K Rooty
L Leafy
M Trunk

5. 

SELECT BTITLE AS TITLE,E.BID as ID,E.PAYMENT_MAXIMUM as PAYMENT_MAXIMUM ,E.COAUTHORS as COAUTHOR_COUNT from BOOKS B
LEFT JOIN( SELECT BID,COUNT(ANO) AS COAUTHORS, MAX(PAYMENT) AS PAYMENT_MAXIMUM FROM EARNING GROUP BY BID)
 E on B.BID = E.BID

TITLE	ID	PAYMENT_MAXIMUM	COAUTHOR_COUNT
Long Walk	B1	78	2
Love the fun	B3	89	5
Laugh and cry	B4	86	4
Longest day	B2	83	5
Laugh all the way	 - 	 - 	 - 

6.
SELECT B.BTITLE AS "BOOK_NAME", E.BID AS "BOOK_ID", MAX(E.PAYMENT) AS "Max_Pay",
 COUNT(E.ANO) AS "COAUTHOR_COUNT", SUM(CASE WHEN E.PAYMENT < 0.1 * (SELECT MAX(EE.PAYMENT) FROM 
EARNING EE WHERE EE.BID = E.BID) THEN 1 ELSE 0 END) AS "Co-authors" FROM EARNING E JOIN  
    BOOKS B ON E.BID = B.BID GROUP BY E.BID, B.BTITLE;

BOOK_NAME	BOOK_ID	Max_Pay	COAUTHOR_COUNT	Co-authors
Love the fun	B3	89	5	0
Longest day	B2	83	5	0
Long Walk	B1	78	2	0
Laugh and cry	B4	86	4	0

7.
SELECT AUTH.ANAME AS AUTHOR_NAME, EARN.P as payment
FROM authors AUTH LEFT JOIN ( SELECT ANO,round(AVG(payment),2) AS P FROM EARNING GROUP BY ANO)  EARN ON EARN.ANO = AUTH.ANO

AUTHOR_NAME	PAYMENT
K Rooty	71.67
M Trunk	81.5
L Leafy	73
L Grassy	79
T Branch	56.33
D Flower	85.67
X Bark	 - 

8.

SELECT AU.ANAME AS AUTHORS FROM AUTHORS AU JOIN EARNING EARN ON AU.ANO = EARN.ANO GROUP BY AU.ANAME HAVING AVG(EARN.Payment) = (
    SELECT MIN(pay_avg) FROM (SELECT AVG(EARN.Payment) AS pay_avg FROM EARNING EARN GROUP BY EARN.ANO ));

AUTHORS
T Branch
